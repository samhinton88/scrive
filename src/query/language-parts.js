const TYPESCRIPT_TYPES = [
  'TSParameterProperty',
  'TSDeclareFunction',
  'TSDeclareMethod',
  'TSQualifiedName',
  'TSCallSignatureDeclaration',
  'TSConstructSignatureDeclaration',
  'TSPropertySignature',
  'TSMethodSignature',
  'TSIndexSignature',
  'TSThisType',
  'TSFunctionType',
  'TSConstructorType',
  'TSTypeReference',
  'TSTypePredicate',
  'TSTypeQuery',
  'TSTypeLiteral',
  'TSArrayType',
  'TSTupleType',
  'TSOptionalType',
  'TSRestType',
  'TSUnionType',
  'TSIntersectionType',
  'TSConditionalType',
  'TSInferType',
  'TSParenthesizedType',
  'TSTypeOperator',
  'TSIndexedAccessType',
  'TSMappedType',
  'TSLiteralType',
  'TSExpressionWithTypeArguments',
  'TSInterfaceDeclaration',
  'TSInterfaceBody',
  'TSTypeAliasDeclaration',
  'TSAsExpression',
  'TSTypeAssertion',
  'TSEnumDeclaration',
  'TSEnumMember',
  'TSModuleDeclaration',
  'TSModuleBlock',
  'TSImportType',
  'TSImportEqualsDeclaration',
  'TSExternalModuleReference',
  'TSNonNullExpression',
  'TSExportAssignment',
  'TSNamespaceExportDeclaration',
  'TSTypeAnnotation',
  'TSTypeParameterInstantiation',
  'TSTypeParameterDeclaration',
  'TSTypeParameter',
];

const JSX_TYPES = [
  'JSXAttribute',
  'JSXClosingElement',
  'JSXElement',
  'JSXEmptyExpression',
  'JSXExpressionContainer',
  'JSXSpreadChild',
  'JSXIdentifier',
  'JSXMemberExpression',
  'JSXNamespacedName',
  'JSXOpeningElement',
  'JSXSpreadAttribute',
  'JSXText',
  'JSXFragment',
  'JSXOpeningFragment',
  'JSXClosingFragment',
];

const EXPERIMENTAL_TYPES = [
  'ArgumentPlaceholder',
  'AwaitExpression',
  'BindExpression',
  'ClassProperty',
  'OptionalMemberExpression',
  'PipelineTopicExpression',
  'PipelineBareFunction',
  'PipelinePrimaryTopicReference',
  'OptionalCallExpression',
  'ClassPrivateProperty',
  'ClassPrivateMethod',
  'Import',
  'ImportAttribute',
  'Decorator',
  'DoExpression',
  'ExportDefaultSpecifier',
  'ExportNamespaceSpecifier',
  'PrivateName',
  'BigIntLiteral',
  'RecordExpression',
  'TupleExpression',
];

const ES6_TYPES = [
  'AssignmentPattern',
  'ArrayPattern',
  'ArrowFunctionExpression',
  'ClassBody',
  'ClassExpression',
  'ClassDeclaration',
  'ExportAllDeclaration',
  'ExportDefaultDeclaration',
  'ExportNamedDeclaration',
  'ExportSpecifier',
  'ForOfStatement',
  'ImportDeclaration',
  'ImportDefaultSpecifier',
  'ImportNamespaceSpecifier',
  'ImportSpecifier',
  'MetaProperty',
  'ClassMethod',
  'ObjectPattern',
  'SpreadElement',
  'Super',
  'TaggedTemplateExpression',
  'TemplateElement',
  'TemplateLiteral',
  'YieldExpression',
];

const BASE_TYPES = [
  'ArrayExpression',
  'AssignmentExpression',
  'BinaryExpression',
  'InterpreterDirective',
  'Directive',
  'DirectiveLiteral',
  'BlockStatement',
  'BreakStatement',
  'CallExpression',
  'CatchClause',
  'ConditionalExpression',
  'ContinueStatement',
  'DebuggerStatement',
  'DoWhileStatement',
  'EmptyStatement',
  'ExpressionStatement',
  'File',
  'ForInStatement',
  'ForStatement',
  'FunctionDeclaration',
  'FunctionExpression',
  'Identifier',
  'IfStatement',
  'LabeledStatement',
  'StringLiteral',
  'NumericLiteral',
  'NullLiteral',
  'BooleanLiteral',
  'RegExpLiteral',
  'LogicalExpression',
  'MemberExpression',
  'NewExpression',
  'Program',
  'ObjectExpression',
  'ObjectMethod',
  'ObjectProperty',
  'RestElement',
  'ReturnStatement',
  'SequenceExpression',
  'ParenthesizedExpression',
  'SwitchCase',
  'SwitchStatement',
  'ThisExpression',
  'ThrowStatement',
  'TryStatement',
  'UnaryExpression',
  'UpdateExpression',
  'VariableDeclaration',
  'VariableDeclarator',
  'WhileStatement',
  'WithStatement'
]

const TYPES = [
  ...TYPESCRIPT_TYPES,
  ...JSX_TYPES,
  ...EXPERIMENTAL_TYPES,
  ...ES6_TYPES,
  ...BASE_TYPES
];

module.exports = { TYPES };
